// src/electron/api/services/init.service.ts

import * as fs from 'fs';
import { DATA_PATHS } from '../../utils/paths.js';
import { ensureDirectoryExists, writeJsonFile } from '../../utils/file-utils.js';
import { defaultConfig } from '../../config.js';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
 */
export class InitService {

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
   */
  initialize(): void {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö...');

    // –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    ensureDirectoryExists(DATA_PATHS.root());
    ensureDirectoryExists(DATA_PATHS.backups());
    ensureDirectoryExists(DATA_PATHS.presentations());
    ensureDirectoryExists(DATA_PATHS.templates());

    // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!fs.existsSync(DATA_PATHS.config())) {
      writeJsonFile(DATA_PATHS.config(), defaultConfig);
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
    }

    if (!fs.existsSync(DATA_PATHS.students())) {
      writeJsonFile(DATA_PATHS.students(), []);
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Å—Ç—É–¥–µ–Ω—Ç–æ–≤');
    }

    if (!fs.existsSync(DATA_PATHS.journal())) {
      writeJsonFile(DATA_PATHS.journal(), []);
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∂—É—Ä–Ω–∞–ª–∞');
    }

    console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
   */
  checkIntegrity(): boolean {
    const requiredFiles = [
      DATA_PATHS.config(),
      DATA_PATHS.students(),
      DATA_PATHS.journal()
    ];

    const missingFiles = requiredFiles.filter(file => !fs.existsSync(file));

    if (missingFiles.length > 0) {
      console.warn('‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã:', missingFiles);
      return false;
    }

    return true;
  }

  /**
   * –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
   */
  reset(): void {
    console.warn('‚ö†Ô∏è –°–ë–†–û–° –í–°–ï–• –î–ê–ù–ù–´–•');

    writeJsonFile(DATA_PATHS.config(), defaultConfig);
    writeJsonFile(DATA_PATHS.students(), []);
    writeJsonFile(DATA_PATHS.journal(), []);

    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º');
  }
}

export const initService = new InitService();