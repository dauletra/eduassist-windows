// src/electron/main.ts

import { app, BrowserWindow, ipcMain } from 'electron';
import { setupElectronAPI } from './api/index.js';
import { createMainWindow, getMainWindow, sendToMainWindow } from './windows/main-window.js';
import { createSettingsWindow } from './windows/settings-window.js';
import { lessonService } from './api/services/lesson.service.js';
import { isDev } from './utils/dev-config.js'

// ==================== –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –î–û app.ready() ====================

// –û—Ç–∫–ª—é—á–∞–µ–º GPU –≤ dev —Ä–µ–∂–∏–º–µ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –∫—ç—à–∞
if (isDev()) {
  app.disableHardwareAcceleration();
  app.commandLine.appendSwitch('--disable-gpu');
  app.commandLine.appendSwitch('--disable-software-rasterizer');
  app.commandLine.appendSwitch('--disable-gpu-compositing');
}

// ==================== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ–∫–æ–Ω ====================

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ–∫–æ–Ω
 */
function setupWindowHandlers(): void {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  ipcMain.handle('open-settings-window', () => {
    const mainWindow = getMainWindow();
    createSettingsWindow(mainWindow);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç –æ–∫–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫ –≥–ª–∞–≤–Ω–æ–º—É –æ–∫–Ω—É
  ipcMain.on('notify-main-window', (_event, channel: string) => {
    if (channel === 'settings-updated') {
      sendToMainWindow('settings-updated');
    }
  });
}

// ==================== –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ====================

/**
 * –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É
 */
app.whenReady().then(async () => {
  console.log('‚ö° Electron –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ');

  const mainWindow = createMainWindow();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–∫–Ω–∞
  setupElectronAPI(mainWindow);

  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ–∫–æ–Ω
  setupWindowHandlers();
});

/**
 * –í—Å–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã
 */
app.on('window-all-closed', () => {
  console.log('üîö –í—Å–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã');

  // –ù–∞ macOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ—Å—Ç–∞—é—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –¥–∞–∂–µ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö –æ–∫–æ–Ω
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

/**
 * –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ (–∞–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è macOS)
 */
app.on('activate', () => {
  console.log('üîÑ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ');

  // –ù–∞ macOS –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∏–∫–æ–Ω–∫—É –≤ –¥–æ–∫–µ
  if (BrowserWindow.getAllWindows().length === 0) {
    const mainWindow = createMainWindow();
    setupElectronAPI(mainWindow);
    setupWindowHandlers();
  }
});

/**
 * –ü–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
app.on('before-quit', () => {
  console.log('üìù –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≤—ã—Ö–æ–¥—É –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
  lessonService.flushUpdates();

  // TODO: –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É —Ä–µ—Å—É—Ä—Å–æ–≤
});

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
 */
process.on('uncaughtException', (error) => {
  console.error('üí• –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ:', error);
  // TODO: –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –æ—à–∏–±–∫–∏ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('üö´ –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ Promise:', reason, promise);
});

// ==================== –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö ====================

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export function isAppReady(): boolean {
  return app.isReady();
}

console.log('üéØ Main –ø—Ä–æ—Ü–µ—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');