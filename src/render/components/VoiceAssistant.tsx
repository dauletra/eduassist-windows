import React, { useState } from 'react';
import { Mic, MicOff, WifiOff, HelpCircle, MessageCircle, Play, MessageSquare } from 'lucide-react';

export const VoiceAssistant: React.FC = () => {
  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
  const ASSISTANT_NAME = 'Galaxy'
  const WAKE_WORD = 'Galaxy'

  const [isAssistantActive] = useState(true);
  const [isMicWorking] = useState(true);
  const [isInternetConnected] = useState(true);
  const [isWaitingForKeyword] = useState(true);
  const [isRecording] = useState(false);
  const [lastCommand] = useState<string>('');  // –û—Ç–∫—Ä–æ–π –∂—É—Ä–Ω–∞–ª 9 –í –∫–ª–∞—Å—Å–∞
  const [assistantQuestion] = useState<string>('');  // –ö–∞–∫–æ–π –∫–ª–∞—Å—Å –æ—Ç–∫—Ä—ã—Ç—å: 9–ê –∏–ª–∏ 9–ë?
  const [hasDialogHistory] = useState(true);

  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
  const getStateConfig = () => {
    if (!isAssistantActive) {
      return {
        text: '–í—ã–∫–ª—é—á–µ–Ω',
        color: 'text-gray-500',
        bgStyle: 'bg-gray-400 opacity-50',
        icon: <MicOff size={32} className="text-white opacity-80" />,
        animation: null
      };
    }

    if (isRecording) {
      return {
        text: '–ó–∞–ø–∏—Å—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É...',
        color: 'text-red-600',
        bgStyle: 'bg-gradient-to-br from-red-400 to-red-600 scale-110',
        icon: <Mic size={32} className="text-white animate-pulse" />,
        animation: 'recording'
      };
    }

    if (isWaitingForKeyword) {
      return {
        text: `–°–∫–∞–∂–∏—Ç–µ "${WAKE_WORD}"`,
        color: 'text-purple-600',
        bgStyle: 'bg-gradient-to-br from-purple-400 via-purple-600 to-blue-600',
        icon: <Mic size={32} className="text-white" />,
        animation: 'waiting-keyword'
      };
    }

    return {
      text: '–ì–æ—Ç–æ–≤ –∫ –∫–æ–º–∞–Ω–¥–µ',
      color: 'text-green-600',
      bgStyle: 'bg-gradient-to-br from-green-400 to-green-600',
      icon: <Play size={32} className="text-white" />,
      animation: 'ready'
    };
  };

  const getHintText = () => {
    if (!isMicWorking) return '‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞';
    if (!isInternetConnected) return '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É';
    if (isRecording) return 'üé§ –ü—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —á–µ—Ç–∫–æ –∏ –≥—Ä–æ–º–∫–æ';
    if (isWaitingForKeyword) return `üí° –°–∫–∞–∂–∏—Ç–µ "${WAKE_WORD}" –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥`;
    return 'üí° –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å';
  };

  const handleOpenDialogHistory = () => {
    console.log('–û—Ç–∫—Ä—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–æ–≤ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º');
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–ª–∏ drawer —Å –∏—Å—Ç–æ—Ä–∏–µ–π
  };

  const state = getStateConfig();
  const hasSystemIssues = !isMicWorking || !isInternetConnected;

  return (
    <div className="flex items-center justify-center min-h-full p-8 relative">

      {/* –ö–Ω–æ–ø–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É */}
      {hasDialogHistory && (
        <button
          onClick={handleOpenDialogHistory}
          className="absolute top-6 right-6 p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-50 rounded-lg transition-all duration-200 opacity-60 hover:opacity-100 z-20"
          title="–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–æ–≤"
          aria-label="–û—Ç–∫—Ä—ã—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–æ–≤"
        >
          <MessageSquare size={16} className="transition-colors duration-200" />
        </button>
      )}

      <div className="flex items-start gap-8 max-w-4xl w-full">

        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ */}
        <div className="flex-shrink-0 text-center">
          <div className="relative mb-3">
            <div className={`w-24 h-24 rounded-full flex items-center justify-center shadow-lg transition-all duration-300 cursor-pointer ${state.bgStyle}`}>
              {state.icon}
            </div>

            {/* –ê–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–ª—å—Ü–∞ */}
            {state.animation === 'recording' && (
              <>
                <div className="absolute inset-0 w-24 h-24 rounded-full bg-red-500 opacity-20 animate-ping" />
                <div className="absolute -top-1 -left-1 w-26 h-26 rounded-full border-2 border-red-300 opacity-60 animate-pulse" />
              </>
            )}

            {(state.animation === 'waiting-keyword' || state.animation === 'ready') && (
              <div className={`absolute -top-1 -left-1 w-26 h-26 rounded-full border-2 opacity-40 animate-pulse ${
                state.animation === 'waiting-keyword' ? 'border-purple-300' : 'border-green-300 opacity-60'
              }`} />
            )}
          </div>

          <p className={`text-sm font-medium ${state.color}`}>
            {state.text}
          </p>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
        <div className="flex-1 space-y-3">

          {/* –í—ã–∫–ª—é—á–µ–Ω–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç */}
          {!isAssistantActive && (
            <div className="bg-gray-50 border border-gray-200 rounded-lg p-4 text-center">
              <p className="text-gray-600 mb-2">–ì–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω</p>
              <button className="text-sm text-purple-600 hover:text-purple-700 font-medium">
                –í–∫–ª—é—á–∏—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
              </button>
            </div>
          )}

          {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∞–∫—Ç–∏–≤–µ–Ω) */}
          {isAssistantActive && hasSystemIssues && (
            <div className="flex gap-3">
              {!isMicWorking && (
                <div className="flex items-center gap-2 px-3 py-2 bg-red-50 border border-red-200 rounded-lg text-sm">
                  <MicOff size={16} className="text-red-600" />
                  <span className="text-red-700">–ú–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</span>
                </div>
              )}

              {!isInternetConnected && (
                <div className="flex items-center gap-2 px-3 py-2 bg-red-50 border border-red-200 rounded-lg text-sm">
                  <WifiOff size={16} className="text-red-600" />
                  <span className="text-red-700">–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞</span>
                </div>
              )}
            </div>
          )}

          {/* –î–∏–∞–ª–æ–≥ —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º */}
          {isAssistantActive && assistantQuestion && (
            <div className="bg-amber-50 border border-amber-200 rounded-lg p-4">
              <div className="flex items-start gap-3">
                <HelpCircle size={18} className="text-amber-600 mt-0.5 flex-shrink-0" />
                <div>
                  <p className="text-sm font-medium text-amber-800 mb-1">{ASSISTANT_NAME} —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç:</p>
                  <p className="text-amber-700">"{assistantQuestion}"</p>
                </div>
              </div>
            </div>
          )}

          {/* –ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥ */}
          {isAssistantActive && lastCommand && !assistantQuestion && (
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
              <div className="flex items-start gap-3">
                <MessageCircle size={18} className="text-blue-600 mt-0.5 flex-shrink-0" />
                <div>
                  <p className="text-sm font-medium text-blue-800 mb-1">–í—ã–ø–æ–ª–Ω–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞:</p>
                  <p className="text-blue-700">"{lastCommand}"</p>
                </div>
              </div>
            </div>
          )}

          {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
          {isAssistantActive && !assistantQuestion && (
            <div className="bg-gray-50 rounded-lg p-3">
              <p className="text-sm text-gray-600">{getHintText()}</p>
            </div>
          )}

        </div>
      </div>
    </div>
  );
};

export default VoiceAssistant;